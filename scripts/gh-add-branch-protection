#!/usr/bin/env bash

# GitHub Branch Protection Setup Script
# Usage: ./scripts/gh-add-branch-protection [branch] [config-file]
# Example: ./scripts/gh-add-branch-protection main .github/branch-protection.json

set -euo pipefail

# Default values
BRANCH="${1:-main}"
CONFIG_FILE="${2:-}"

# Get repository info
REPO=$(gh repo view --json owner,name -q '.owner.login + "/" + .name')

if [[ -z "$REPO" ]]; then
    echo "Error: Could not determine repository. Make sure you're in a git repository with GitHub remote."
    exit 1
fi

echo "Setting up branch protection for branch '$BRANCH' in repository '$REPO'"

# If no config file provided, use default configuration
if [[ -z "$CONFIG_FILE" ]]; then
    echo "No config file provided. Using default configuration..."

    # Create temporary config file with default settings
    CONFIG_FILE=$(mktemp)
    cat >"$CONFIG_FILE" <<'EOF'
{
  "required_status_checks": {
    "strict": false,
    "contexts": ["python-unittests (3.13)"]
  },
  "enforce_admins": false,
  "required_pull_request_reviews": {
    "required_approving_review_count": 0,
    "dismiss_stale_reviews": false,
    "require_code_owner_reviews": false,
    "require_last_push_approval": false
  },
  "restrictions": null,
  "required_linear_history": false,
  "allow_force_pushes": false,
  "allow_deletions": false,
  "block_creations": false,
  "required_conversation_resolution": false,
  "lock_branch": false,
  "allow_fork_syncing": false
}
EOF
    CLEANUP_TEMP=true
else
    # Validate config file exists
    if [[ ! -f "$CONFIG_FILE" ]]; then
        echo "Error: Config file '$CONFIG_FILE' not found."
        exit 1
    fi
    CLEANUP_TEMP=false
    echo "Using config file: $CONFIG_FILE"
fi

# Show current protection status
echo "Current protection status for branch '$BRANCH':"
if gh api "repos/$REPO/branches/$BRANCH/protection" 2>/dev/null; then
    echo "Branch is currently protected."
else
    echo "Branch is not currently protected."
fi

echo ""
echo "Applying branch protection..."

# Apply branch protection
if gh api \
    --method PUT \
    --header "Accept: application/vnd.github+json" \
    --header "X-GitHub-Api-Version: 2022-11-28" \
    "repos/$REPO/branches/$BRANCH/protection" \
    --input "$CONFIG_FILE"; then

    echo ""
    echo "‚úÖ Branch protection successfully applied to '$BRANCH'!"
    echo "üîó View settings: https://github.com/$REPO/settings/branches"
else
    echo ""
    echo "‚ùå Failed to apply branch protection."
    exit 1
fi

# Cleanup temporary file if we created one
if [[ "$CLEANUP_TEMP" == "true" ]]; then
    rm -f "$CONFIG_FILE"
fi

echo ""
echo "Branch protection summary:"
echo "- Branch: $BRANCH"
echo "- Repository: $REPO"
echo "- Required status checks: python-unittests (3.13)"
echo "- Required approving reviews: 0"
echo "- Admin enforcement: disabled"
