{#- Main tree rendering template with simple column-based layout -#}
{% macro render_node(node, depth=0) %}
{%- set indent = "  " * depth -%}
{%- set icon = node.icon or (symbols[node.type] if node.type and symbols else "?") -%}
{#- Handle multiline labels (especially for verbatim content) -#}
{%- set raw_label = node.label | default("", true) | trim -%}
{%- if "\n" in raw_label -%}
  {%- set label_lines = raw_label.split("\n") -%}
  {%- set label = label_lines[0] -%}
{%- else -%}
  {%- set label = raw_label -%}
{%- endif -%}

{#- Format extras -#}
{%- set extras_parts = [] -%}
{%- if node.extra -%}
  {%- for k, v in node.extra.items() -%}
    {%- if v is sameas true -%}
      {%- set _ = extras_parts.append(k) -%}
    {%- elif v is not sameas false and v is not none -%}
      {%- set _ = extras_parts.append(k ~ "=" ~ v) -%}
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}
{%- set extras_str = extras_parts | join(" ") -%}
{#- Truncate extras if too long -#}
{%- if extras_str | length > 20 -%}
  {%- set extras_str = extras_str[:19] ~ "…" -%}
{%- endif -%}

{#- Line count -#}
{%- set line_count = node.children | length if node.children else node.content_lines -%}
{%- set count_str = line_count ~ "L" -%}

{#- Calculate actual content widths -#}
{%- set current_indent_width = depth * 2 -%}
{%- set icon_str = icon ~ " " -%}

{#- Calculate available width for this specific line after indent + icon -#}
{%- set used_space = current_indent_width + icon_str | length -%}
{%- set space_for_count = count_str | length -%}
{%- set min_required = used_space + space_for_count + 1 -%}

{#- For very narrow terminals, skip extras entirely -#}
{%- if terminal_width <= min_required + 4 -%}
  {%- set space_for_extras = 0 -%}
  {%- set extras_str = "" -%}
{%- else -%}
  {%- set space_for_extras = (2 + extras_str | length) if extras_str else 0 -%}
{%- endif -%}

{%- set available_for_label = terminal_width - used_space - space_for_count - space_for_extras - 1 -%}

{#- Ensure we have at least 1 character for label -#}
{%- if available_for_label < 1 -%}
  {%- set available_for_label = 1 -%}
  {%- set extras_str = "" -%}
  {%- set space_for_extras = 0 -%}
{%- endif -%}

{#- Truncate label if needed based on available space -#}
{%- if label | length > available_for_label -%}
  {%- set label = label[:available_for_label-1] ~ "…" -%}
{%- endif -%}

{#- Build content part: indent + icon + label + extras -#}
{%- set content_part = indent ~ icon_str ~ label -%}
{%- if extras_str -%}
  {%- set content_part = content_part ~ "  " ~ extras_str -%}
{%- endif -%}

{#- Calculate exact padding to right-align count -#}
{%- set content_length = content_part | length -%}
{%- set spaces_needed = terminal_width - content_length - count_str | length -%}
{%- set padding = " " * (spaces_needed if spaces_needed > 0 else 1) -%}

{#- Assemble final line -#}
{%- set line = content_part ~ padding ~ count_str -%}

{#- Apply color if enabled -#}
{%- if use_color -%}
{{ apply_simple_markup(line, current_indent_width, icon_str, label, extras_str, count_str) }}{{ "\n" }}
{%- else -%}
{{ line }}{{ "\n" }}
{%- endif -%}

{%- for child in node.children %}
{{ render_node(child, depth + 1) }}
{%- endfor %}
{%- endmacro %}

{#- Entry point: render the root node -#}
{{ render_node(root_node, 0) }}